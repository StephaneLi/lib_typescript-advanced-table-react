{"version":3,"file":"index.js","sources":["../src/lib/index.tsx"],"sourcesContent":["import { faCaretDown, faCaretUp, faDatabase } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ChangeEvent, CSSProperties, Fragment, FunctionComponent, ReactNode, useEffect, useRef, useState } from 'react';\r\nimport jsonTranslate from \"./data.translate.json\"\r\nimport './style.scss';\r\n\r\nexport type TableDataLegend = {\r\n  label: string,\r\n  entry: string\r\n}\r\n\r\nexport type TableDataFilterSort = {\r\n  index: number,\r\n  filter: TablDataFilterSortType\r\n}\r\n\r\nexport type TablDataProps = {\r\n  listObjectsData: Object[],\r\n  listLegend: TableDataLegend[],\r\n  lang?: string,\r\n  color?: string,\r\n  textColor?: string\r\n}\r\n\r\nexport enum TablDataFilterSortType {\r\n  asc,\r\n  desc,\r\n  none\r\n}\r\n\r\nconst TableData: FunctionComponent<TablDataProps> = ({listObjectsData, listLegend, lang = 'en-EN', color = 'grey', textColor}) => {\r\n  const i18n: Map<string, any> = new Map(Object.entries(jsonTranslate.i18n))\r\n\r\n  const translate: Map<string, any> | null = i18n.get(lang) ? new Map(Object.entries(i18n.get(lang))) : new Map(Object.entries(i18n.get('fr-FR')))\r\n\r\n  const defaultEntrieCountValue = 10\r\n  const [filterListObjectsData, setFilterListObjectsData] = useState<Array<Object>>([])\r\n  const [arraySortSelected, setArraySortSelected] = useState<TableDataFilterSort>()\r\n  const [entriesCount, setEntriesCount] = useState<number>(defaultEntrieCountValue)\r\n  const [currentPage, setCurrentPage] = useState<number>(1)\r\n  const [nbrPages, setNbrPages] = useState<number>(1)\r\n\r\n  const searchInput = useRef<HTMLInputElement>(null)\r\n\r\n  useEffect(() => {\r\n    setFilterListObjectsData(listObjectsData)\r\n  }, [listObjectsData])\r\n\r\n  useEffect(() => {    \r\n      let newNbrPages = Math.ceil(filterListObjectsData.length / entriesCount)    \r\n      if(newNbrPages === 0) newNbrPages = 1\r\n\r\n      setNbrPages(newNbrPages)\r\n\r\n      if(currentPage > newNbrPages) setCurrentPage(newNbrPages)\r\n  }, [filterListObjectsData, entriesCount, currentPage])\r\n\r\n  const filterTableSort  = (filterObject: TableDataFilterSort, dataListObject: Object[]): Object[] => {\r\n    const objectEntryLabel:string = listLegend[filterObject.index].entry  \r\n  \r\n    switch(filterObject.filter) {\r\n      case  TablDataFilterSortType.asc :\r\n        const filterTabSortDesc = dataListObject.sort((a: any, b: any) => {\r\n          // Convert data type for sort filter\r\n          const valueA = typeof(a[objectEntryLabel]) === 'string' ? a[objectEntryLabel].toLowerCase().replace(' ', '') : a[objectEntryLabel]\r\n          const valueB = typeof(b[objectEntryLabel]) === 'string' ?  b[objectEntryLabel].toLowerCase().replace(' ', '') : b[objectEntryLabel]\r\n\r\n          if(valueA < valueB) return -1\r\n          if (valueB > valueA) return 1\r\n          return 0\r\n        })\r\n        return filterTabSortDesc\r\n      case  TablDataFilterSortType.desc :        \r\n        const filterTabSortAsc =  dataListObject.sort((a: any, b: any) => {\r\n          // Convert data type for sort filter        \r\n          const valueA = typeof(a[objectEntryLabel]) === 'string' ?  a[objectEntryLabel].toLowerCase().replace(' ', '') : a[objectEntryLabel]\r\n          const valueB = typeof(b[objectEntryLabel]) === 'string' ?  b[objectEntryLabel].toLowerCase().replace(' ', '') : b[objectEntryLabel]\r\n\r\n          if(valueA > valueB) return -1\r\n          if (valueB < valueA) return 1\r\n          return 0\r\n        })\r\n        return filterTabSortAsc\r\n      default:\r\n        return []\r\n    }\r\n  }\r\n\r\n  const filterTableSearch = (value: string): Object[] => {\r\n    let keywords: string[] = value.split(' ')\r\n    let resultTabSearch: Object[] = []\r\n\r\n    keywords = keywords.map((value) => value.toLowerCase())\r\n    \r\n    keywords.forEach((word) => {\r\n      const wordResultTabSearch: Object[] = []\r\n      \r\n      listObjectsData.forEach((objectData: Object) => {\r\n        let values = Object.values(objectData) // Extact Object values\r\n        values = values.map((value) => {\r\n          let convertValueToString: string = ''\r\n          if(typeof(value) === 'number') convertValueToString = value.toString() // Convert number to string\r\n          if(typeof(value) === 'string') convertValueToString = value.toLowerCase() // Keep String value\r\n          if(value instanceof Date) convertValueToString = value.toLocaleDateString(lang, {year:'numeric', month:'2-digit', day:'2-digit'})\r\n          \r\n          return convertValueToString\r\n        })\r\n\r\n        values.forEach((value: string) => {\r\n          if(word.length > 0 && value.includes(word) && !wordResultTabSearch.includes(objectData)) {\r\n            wordResultTabSearch.push(objectData)\r\n            return\r\n          }\r\n        })\r\n      })\r\n\r\n      resultTabSearch = resultTabSearch.concat(wordResultTabSearch)\r\n    })\r\n\r\n    return keywords.length > 0 && resultTabSearch.length > 0 ? resultTabSearch : listObjectsData\r\n  }\r\n\r\n  const handleChangeSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const newFilterTab = filterTableSearch(e.currentTarget.value)\r\n    \r\n    setFilterListObjectsData(newFilterTab)    \r\n  }\r\n\r\n  const handleChangeEntries = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const newNbrEntriesCount: number = parseInt(e.currentTarget.value)\r\n    setEntriesCount(newNbrEntriesCount)\r\n  }\r\n\r\n  const handleChangeSort = (filterObject: TableDataFilterSort) => {\r\n    const newFilterTab = filterTableSort(filterObject, filterListObjectsData)\r\n    setFilterListObjectsData(newFilterTab)\r\n    setArraySortSelected(filterObject)\r\n  }\r\n\r\n  const generateTableHeader = (): ReactNode => {\r\n    return (\r\n      <thead className=\"table-data__table__header\">\r\n        <tr>\r\n          {listLegend.map((item: TableDataLegend, index: number) => (\r\n            <td key={ item.entry }>\r\n              <div className=\"table-data__table__header__legend\">\r\n                <span onClick={() => handleChangeSort({\r\n                    index: index, \r\n                    filter: arraySortSelected?.filter === TablDataFilterSortType.asc ?\r\n                    TablDataFilterSortType.desc : TablDataFilterSortType.asc\r\n                  })}\r\n                >\r\n                  { item.label }\r\n                </span>\r\n                <div className='table-data__table__header__legend__controls'>\r\n                  <i data-testid='asc-controller' className={`${ arraySortSelected?.index === index && arraySortSelected.filter === TablDataFilterSortType.asc ? 'active' : '' }`}>\r\n                    <FontAwesomeIcon\r\n                      onClick={() => handleChangeSort({index: index, filter: TablDataFilterSortType.asc}) }                      \r\n                      icon={faCaretUp}\r\n                      fontSize={'10px'} \r\n                    />\r\n                  </i>\r\n                  <i data-testid='desc-controller' className={`${ arraySortSelected?.index === index && arraySortSelected.filter === TablDataFilterSortType.desc ? 'active' : '' }`}>\r\n                    <FontAwesomeIcon \r\n                      onClick={() => handleChangeSort({index: index, filter: TablDataFilterSortType.desc}) }                      \r\n                      icon={faCaretDown} \r\n                      fontSize={'10px'} \r\n                    />\r\n                  </i>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    )\r\n  }\r\n\r\n  const generateTableBody = (): ReactNode => {\r\n    const startEntries = (currentPage -1) * entriesCount\r\n    const endEntries = ((currentPage -1) * entriesCount) + (entriesCount - 1)\r\n\r\n    const filterTabFilterWithEntriesCount = filterListObjectsData.slice(startEntries, endEntries)\r\n\r\n    return (\r\n      <tbody>\r\n        {filterListObjectsData.length > 0 ? (\r\n          filterTabFilterWithEntriesCount.map((data: Object, index: number) => (\r\n            generateLineEmployee(index, data)\r\n          ))\r\n        ) : (\r\n          <tr>\r\n            <td colSpan={Object.entries(listObjectsData[0]).length} className=\"no-result\">{translate.get('noResult')}</td>            \r\n          </tr>\r\n        )}\r\n    </tbody>\r\n    )\r\n  }\r\n\r\n  const generateLineEmployee = (key:number, data: Object): ReactNode => {\r\n    const dataMapFromObject = Array.from(new Map(Object.entries(data)))\r\n\r\n    // Order data from legend agencement\r\n    const dataMapOrder =  dataMapFromObject.map((_elmnt, index) => {\r\n      return dataMapFromObject.find(item => item[0] === listLegend[index].entry)\r\n    })\r\n\r\n    return (\r\n      <tr key={key} className={`${key % 2 ? 'table-white' : 'table-color'}`}>\r\n        {\r\n          dataMapOrder.map((item: any, index: number) => (\r\n            <td key={index}>{ item[1] instanceof Date ? item[1].toLocaleDateString(lang, {year:'numeric', month:'2-digit', day:'2-digit'}) : item[1] }</td>\r\n          ))\r\n        }\r\n      </tr> \r\n    )\r\n  }\r\n\r\n  const generatePagination = (): ReactNode => {\r\n    \r\n    const pages: ReactNode[] = []\r\n\r\n    for (let index = 1; index <= nbrPages; index++) {\r\n      pages.push(\r\n        <li\r\n          key={'page-' + index}\r\n          className={index === currentPage ? 'current' : ''}\r\n          onClick={() => setCurrentPage(index)}\r\n        >\r\n          { index }\r\n        </li>\r\n      )    \r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div \r\n          className={`table-data__pagination__controler ${currentPage <= 1 ? ' disable' : ''}`}\r\n          onClick={() => setCurrentPage(currentPage - 1)}\r\n        >\r\n          {translate.get('previous')}\r\n        </div>\r\n        <ul className='table-data__pagination__pages'>\r\n          { pages }\r\n        </ul>\r\n        <div \r\n          className={`table-data__pagination__controler ${currentPage >= nbrPages ? ' disable' : ''}`}\r\n          onClick={() => setCurrentPage(currentPage + 1)}\r\n        >\r\n          {translate.get('next')}\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  return (    \r\n    <div\r\n      data-testid='table-data'\r\n      className='table-data'\r\n      style={{\r\n        '--primary-color': color,\r\n        '--secondary-color': textColor ?? color\r\n      } as CSSProperties}\r\n    >\r\n      { listObjectsData.length > 0 ? (\r\n          <div>\r\n            <div className='table-data__filter'>\r\n              <div className='table-data__filter__count'>\r\n                <label>{translate.get('show')} \r\n                  <select \r\n                    value={entriesCount}\r\n                    onChange={handleChangeEntries}\r\n                    name=\"show-entries\"\r\n                  >\r\n                    <option value={defaultEntrieCountValue}>{defaultEntrieCountValue}</option>\r\n                    <option value={defaultEntrieCountValue * 2.5}>{defaultEntrieCountValue * 2.5}</option>\r\n                    <option value={defaultEntrieCountValue * 5}>{defaultEntrieCountValue * 5}</option>\r\n                    <option value={defaultEntrieCountValue * 10}>{defaultEntrieCountValue * 10}</option>\r\n                  </select>\r\n                  {translate.get('entries')}\r\n                </label>\r\n              </div>\r\n              <div className='table-data__filter__search'>\r\n                <label>{translate.get('search')}</label>\r\n                <input name=\"search\" ref={searchInput} onChange={handleChangeSearch} />\r\n              </div>\r\n            </div>\r\n            <div className='table-data__container'>\r\n              <table className='table-data__table'>\r\n                { generateTableHeader ()}\r\n                { generateTableBody() }\r\n              </table>\r\n            </div>\r\n            <div className='table-data__infos'>\r\n              {\r\n                translate.get('showing') + ' '\r\n                + ((currentPage -1) * entriesCount + 1) \r\n                + ' ' + translate.get('to') + ' ' + (((currentPage -1) * entriesCount) + entriesCount) \r\n                + ' ' + translate.get('of') + ' ' + filterListObjectsData.length \r\n                + ' ' + translate.get('element') + ' '                 \r\n              }\r\n              {\r\n                searchInput && searchInput.current! && searchInput.current!.value.length > 0 ? (\r\n                  ' ( ' + translate.get('filterdFrom') + ' ' + listObjectsData.length + ' ' + translate.get('totalElements') + ' )'\r\n                ) : null\r\n              }\r\n            </div>\r\n            <div className='table-data__pagination'>\r\n              { nbrPages > 1 ? generatePagination() : null }\r\n            </div>\r\n          </div>  \r\n        ) : (\r\n          <div className=\"table-data__empty\">\r\n            <i><FontAwesomeIcon icon={faDatabase} fontSize={'80px'} /></i>\r\n            <h3>{translate.get('dataEmpty')}</h3>\r\n          </div>  \r\n        )}    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableData;\r\n"],"names":["TablDataFilterSortType","useState","useRef","useEffect","_jsx","_jsxs","FontAwesomeIcon","faCaretUp","faCaretDown","Fragment","faDatabase"],"mappings":"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"}